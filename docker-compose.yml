version: '3'
services:
  graph_install:
    image: node:8
    entrypoint: yarn
    working_dir: /app
    volumes:
      - ./graph:/app:cached
      - graph_node_modules:/app/node_modules:cached

  graph:
    image: node:8
    entrypoint: yarn start
    working_dir: /app
    volumes:
      - ./graph:/app:cached
      - graph_node_modules:/app/node_modules:cached
    depends_on:
      - graph_install
      - mongo
      - elastic
      - server
    ports:
      - "${PORT-8700}:${PORT-8700}"
    environment:
      ACCOUNT_KEY: ${APP-cygnus:ofcr}
      PORT: ${PORT-8700}
      APP_HOST: "${APP_HOST-server}:80"
      MONGO_DSN: ${MONGO_DSN-mongodb://mongo/radix}
      MONGOOSE_DEBUG: ${MONGOOSE_DEBUG-false}
      ELASTIC_HOST: ${ELASTIC_HOST-http://elastic}

  server_install:
    image: radix_server:latest
    entrypoint: /app/entrypoint.sh
    volumes:
      - ./server:/var/www/html:cached
      - server_vendor:/var/www/html/vendor:cached
      - server_cache:/var/www/html/var/cache:cached
      - server_composer:/var/www/.composer/cache:cached
    environment:
      APP: ${APP-cygnus:ofcr}
      COMPOSER_ALLOW_SUPERUSER: 1
      COMPOSER_NO_INTERACTION: 1
    networks:
      - default

  server:
    build:
      context: server/
      dockerfile: docker/Dockerfile
    image: radix_server:latest
    ports:
      - "${RADIX_APP_PORT-8710}:80"
    volumes:
      - ./server:/var/www/html:cached
      - server_vendor:/var/www/html/vendor:cached
      - server_cache:/var/www/html/var/cache:cached
    environment:
      APP: ${APP-cygnus:ofcr}
    depends_on:
      - server_install
      - redis
      - mongo
      - elastic
    networks:
      - default

  mongo:
    image: mongo:3.4
    volumes:
      - mongo:/data/db:cached
    ports:
      - "${RADIX_DB_PORT-8701}:27017"
    networks:
      default:
        aliases:
          - "${RADIX_MONGO_HOST-mongo}"
  redis:
    image: redis:alpine
    ports:
      - "${RADIX_REDIS_PORT-8702}:6379"
    networks:
      default:
        aliases:
          - "${RADIX_REDIS_HOST-redis}"
  elastic:
    image: elasticsearch:1.4.5
    volumes:
      - elastic:/usr/share/elasticsearch/data:cached
    ports:
      - "${RADIX_ES_PORT-8703}:9200"
    networks:
      default:
        aliases:
          - "${RADIX_ELASTIC_HOST-elastic}"

  admin_install:
    tty: true
    image: danlynn/ember-cli:3.1.2
    volumes:
      - ./admin:/myapp:cached
      - ember_node_modules:/myapp/node_modules:cached
      - ember_tmp:/myapp/tmp
    restart: on-failure
    working_dir: /myapp
    entrypoint: yarn

  admin:
    tty: true
    image: danlynn/ember-cli:3.1.2
    ports:
      - "${EMBER_SERVE_PORT-8705}:${EMBER_SERVE_PORT-8705}"
      - "${EMBER_LIVER_PORT-8706}:${EMBER_LIVER_PORT-8706}"
      - "${EMBER_TESTS_PORT-8707}:${EMBER_TESTS_PORT-8707}"
    depends_on:
      - admin_install
    networks:
      - default
    volumes:
      - ./admin:/myapp:cached
      - ember_node_modules:/myapp/node_modules:cached
      - ember_tmp:/myapp/tmp
    restart: on-failure
    entrypoint: "./node_modules/.bin/ember server --port ${EMBER_SERVE_PORT-8705} --live-reload-port ${EMBER_LIVER_PORT-8706} --proxy ${EMBER_PROXY-http://docker.for.mac.host.internal:8700}"

volumes:
  server_cache:
    driver_opts:
      type: tmpfs
      device: tmpfs
  server_vendor: {}
  server_composer: {}
  mongo: {}
  elastic: {}
  ember_node_modules: {}
  graph_node_modules: {}
  ember_tmp:
    driver_opts:
      type: tmpfs
      device: tmpfs
networks:
  default: ~
